@use "../../../../style/mixins.scss";
@use "../../../../style/variables.module.scss";

.card {
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.03),
    0 1px 6px -1px rgba(0, 0, 0, 0.02), 0 2px 4px 0 rgba(0, 0, 0, 0.02);

  & > div {
    padding: 6px !important;
  }

  .container {
    @include mixins.flex(row, space-between, stretch);

    .coeff {
      @include mixins.flex(row, flex-start, flex-start);

      a {
        color: inherit;
        font-size: 150%;
      }
    }

    .divider {
      align-self: stretch;
      height: unset;
    }

    .wrapper {
      @include mixins.flex(row, flex-start, flex-start);

      .years {
        @include mixins.flex(column, flex-start, flex-start);
        color: rgba($color: #000000, $alpha: 0.7);
        flex: 1;
        white-space: nowrap;

        .start {
          color: rgba($color: #000000, $alpha: 0.5);
        }

        .end {
          font-size: 150%;
        }
      }

      .tournaments {
        ul {
          list-style: none;
          padding: 0;

          li.tournament {
            @include mixins.flex(row, flex-start, center);
            margin: 6px 0;

            .tools {
              white-space: nowrap;
            }

            .final {
              @include mixins.flex(column, flex-start, flex-start);

              &,
              & > a {
                max-width: 115px;

                @media (min-width: 472px) {
                  max-width: unset;
                }
              }

              .winner {
                &:hover {
                  text-decoration: underline;
                }
              }

              .finalist {
                padding-left: 10px;
                font-size: 80%;
                color: rgba($color: #000000, $alpha: 0.5);
              }

              &.narrow {
                &,
                & > a {
                  @media (min-width: variables.$screen-md) {
                    max-width: 115px;
                  }

                  @media (min-width: 830px) {
                    max-width: unset;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
